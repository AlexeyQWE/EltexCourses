/*
 * This file is generated by jOOQ.
 */
package eltex.tasks.database.tables;


import eltex.tasks.database.DefaultSchema;
import eltex.tasks.database.tables.records.UsersLanguagesRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersLanguages extends TableImpl<UsersLanguagesRecord> {

    private static final long serialVersionUID = -1665171407;

    /**
     * The reference instance of <code>users_languages</code>
     */
    public static final UsersLanguages USERS_LANGUAGES = new UsersLanguages();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UsersLanguagesRecord> getRecordType() {
        return UsersLanguagesRecord.class;
    }

    /**
     * The column <code>users_languages.users_id</code>.
     */
    public final TableField<UsersLanguagesRecord, Long> USERS_ID = createField("users_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>users_languages.lang_id</code>.
     */
    public final TableField<UsersLanguagesRecord, Integer> LANG_ID = createField("lang_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>users_languages</code> table reference
     */
    public UsersLanguages() {
        this(DSL.name("users_languages"), null);
    }

    /**
     * Create an aliased <code>users_languages</code> table reference
     */
    public UsersLanguages(String alias) {
        this(DSL.name(alias), USERS_LANGUAGES);
    }

    /**
     * Create an aliased <code>users_languages</code> table reference
     */
    public UsersLanguages(Name alias) {
        this(alias, USERS_LANGUAGES);
    }

    private UsersLanguages(Name alias, Table<UsersLanguagesRecord> aliased) {
        this(alias, aliased, null);
    }

    private UsersLanguages(Name alias, Table<UsersLanguagesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersLanguages as(String alias) {
        return new UsersLanguages(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersLanguages as(Name alias) {
        return new UsersLanguages(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UsersLanguages rename(String name) {
        return new UsersLanguages(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UsersLanguages rename(Name name) {
        return new UsersLanguages(name, null);
    }
}
